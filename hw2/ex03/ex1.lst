     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 1F04                        d dw 1055
    14 00000002 6400                        s dw 100
    15 00000004 00000000                    x dd 0
    16                                      
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B800000000                      mov eax, 0
    21                                          
    22 00000005 66A1[00000000]                  mov ax, [d]
    23 0000000B 6683C003                        add ax, 3
    24                                          
    25 0000000F 66F725[02000000]                mul word [s]
    26                                          
    27 00000016 66A3[04000000]                  mov [x], ax
    28 0000001C 668915[06000000]                mov [x + 2], dx
    29                                          
    30 00000023 A1[04000000]                    mov eax, [x]
    31 00000028 83E80A                          sub eax, 10
    32                                         
    33 0000002B BA00000000                      mov edx, 0
    34                                          
    35 00000030 31DB                            xor ebx, ebx
    36 00000032 668B1D[00000000]                mov bx, [d]
    37 00000039 F7F3                            div ebx
    38                                          
    39 0000003B A3[04000000]                    mov [x], eax
    40                                          
    41                                      
    42                                          ; exit(0)
    43 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
